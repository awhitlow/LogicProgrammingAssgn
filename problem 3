
%Predicate to find the smallest value in L1 larger than the minimum in L2
min-above-min(L1, L2, Result) :-
  %Find the minimum of L2 by calling the findMin predicate
  findMin(L2, L2Min), 
  %True if LargerL1 is a list that contains all values of L1 that are larger than the minimum of L2
  include(findLarger(L2Min), L1, LargerL1), 
  %Find the minimum of the list of values larger than the minimum of L2
  findMin(LargerL1, Result).

%Compare which values are larger than the other
findLarger(Val, Result) :- Result > Val. 

%Predicate to find the minimum of a list 
%If there is only one value in the list, it is the minimum
findMin([Head], Head).
%The head is the minimum of the list if it is less than the value that is found when the 
%remainder of the list and minimum are used as arguments
findMin([Head|Remainder], Head) :- 
    findMin(Remainder, Minimum), Head < Minimum.
%The calculated minimum is the minimum of the list if the head of the list is greater than the minimum value
findMin([Head|Remainder], Minimum) :- 
    findMin(Remainder, Minimum), Head >= Minimum.
